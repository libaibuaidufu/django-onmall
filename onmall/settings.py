"""
Django settings for onmall project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))
sys.path.insert(0, os.path.join(BASE_DIR, "extract_apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p#nfwtl!*gz$!pxlrj-2bmjsx73(#-3zbpef_-=ncq%yao3n=3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "users.apps.UsersConfig",
    "trade.apps.TradeConfig",
    "goods.apps.GoodsConfig",
    "user_opreation.apps.UserOpreationConfig",
    "crispy_forms",
    'xadmin',
    'rest_framework',
    'django_filters',
    'corsheaders',
    'rest_framework.authtoken',
    'social_django',
    # 'raven.contrib.django.raven_compat',
]

AUTH_USER_MODEL = 'users.UserProfile'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # 跨域的middlewares
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'onmall.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'onmall.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        "NAME": 'onmall',
        "HOST": '127.0.0.1',
        'USER': 'root',
        'PASSWORD': '950916',
        'OPTIONS': {"init_command": 'SET default_storage_engine=INNODB;'} #修改模式  第三方登录建表
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
# 后台设置
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILE_DIRS = [
    os.path.join(BASE_DIR, "static")
]

MEIDA_URL = '/media/'
MEIDA_ROOT = [
    os.path.join(BASE_DIR, "media")
]

REST_FRAMEWORK = {
    # 'PAGE_SIZE': 10, #配置分页  也可以在view中 进行  class 重写 定义
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.TokenAuthentication', #改为动态设置 在相应的view中配置
    ),
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        'anon': '40/minute',
        'user': '60/minute'
    }
}
# 验证 配置
AUTHENTICATION_BACKENDS = (
    'social_core.backends.weibo.WeiboOAuth2',  # 使用第三方库  配置 第三方登录
    'social_core.backends.qq.QQOAuth2',
    'social_core.backends.weixin.WeixinOAuth2',  # 微博 qq 微信
    'users.views.CustomBackend',  # 自定义验证
    'django.contrib.auth.backends.ModelBackend',  #
)
SOCIAL_AUTH_URL_NAMESPACE = 'social'
import datetime

# jwt 配置
JWT = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=7),  # 过期时间
    'JWT_AUTH_HEADER_PREFIX': 'JWT',  # 就是HTTP请求那个 设置jwt 和token jwt是默认
}

# 手机号码正则表达式
REGEX_MOBILE = '^1[358]\d{9}$|^147\d{8}$|^176\d{8}$'

# 云片网设置
APIKEY = 'xxx'

# 支付宝key设置
private_key_path = os.path.join(BASE_DIR, "apps/trade/keys/private_2048.txt")  # 自己私钥
ali_pub_key_path = os.path.join(BASE_DIR, "apps/trade/keys/pub_2048.txt")  # 公钥
alipay_id = 'xxx'
app_notify_url = 'http://127.0.0.1:8000/alipay/return'

# 缓存过期时间
REST_FRAMEWORK_EXTENSIONS = {
    'DEFAULT_CACHE_ERRORS': 60 * 15
}

# redis 缓存队列
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",  # 如果没有密码的话
        # "LOCATION": ":password@redis://127.0.0.1:6379/1",  #最后的1是 数据库  可以不要
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# 第三方登录配置
SOCIAL_AUTH_WEIBO_KEY = '你的appkey'  # 如果还需要配置其他的  修改一下 WEIBO  为其他的
SOCIAL_AUTH_WEIBO_SECRET = '你的 secret'

SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/index/'  # 可以自己修改
LOGIN_REDIRECT_URL = '/index/'

#sentry配置
RAVEN_CONFIG = {
    'dsn': 'https://<key>:<secret>@sentry.io/<project>', #自己的dsn
    # If you are using git, you can also automatically configure the
    # release based on the git info.
    # 'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
}